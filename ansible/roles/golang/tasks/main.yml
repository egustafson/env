---
# file:  ~/env/ansible/roles/golang/tasks/main.yml
#
# Install Golang

- name: check to see if /usr/local/go exists
  stat:
    path: "/usr/local/go"
  register: stat_result

- name: download the Go tarball
  become: yes
  unarchive:
    remote_src: yes
    src: "https://storage.googleapis.com/golang/go{{ golang_ver }}.linux-amd64.tar.gz"
    dest: "/usr/local"
  when: not stat_result.stat.exists

- name: verify go works
  command: go version
  register: result

- name: print go version
  debug:
    msg: "{{ result.stdout }}  Installed."

- name: create temp dir for protoc
  tempfile:
    state: directory
  register: protoc_tmp_dir

- name: download protoc zip file (gRPC)
  unarchive:
    remote_src: yes
    src: "https://github.com/protocolbuffers/protobuf/releases/download/v{{ protoc_ver }}/protoc-{{ protoc_ver }}-linux-x86_64.zip"
    dest: "{{ protoc_tmp_dir.path }}"

- name: install protoc into users bin (~/bin)
  copy:
    remote_src: yes  ## the file is already on the ansible target host
    src: "{{ protoc_tmp_dir.path }}/bin/protoc"
    dest: "{{ ansible_env.HOME }}/bin/protoc"
    mode: '0755'

- name: clean-up the protoc temp directory
  file:
    path: "{{ protoc_tmp_dir.path }}"
    state: absent

- name: install golang plugin for protoc
  command: "go get github.com/golang/protobuf/protoc-gen-go"

- name: install godoc locally (in ~/go/bin)
  command: "go get golang.org/x/tools/cmd/godoc"

- name: install godef locally (in ~/go/bin)
  command: "go get github.com/rogpeppe/godef"

- name: install gocode locally (in ~/go/bin)
  command: "go get github.com/nsf/gocode"

...
