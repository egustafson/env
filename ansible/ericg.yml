---
# file: ~/env/ansible/ericg.yml  ## personal environment

- hosts: all

  tasks:

  - name: enable dmesg
    become: yes
    sysctl:
      name: kernel.dmesg_restrict
      value: '0'
      state: present
      reload: yes

  - name: which ping
    command: "which ping"
    register: ping_path
    ignore_errors: true

  - name: enable ping
    become: yes
    capabilities:
      path: "{{ ping_path.stdout }}"
      capability: cap_net_raw+p
      state: present
    when: ping_path.stdout | length > 0

#   - name: add Ubuntu Emacs Daily Snapshot PPA repository
#     become: yes
#     apt_repository:
#       repo: "ppa:ubuntu-elisp/ppa"
#       state: present

  - name: install packages
    become: yes
    apt:
      state: latest
      name:
        # - emacs-snapshot-nox
        # - emacs-snapshot-common
        - emacs-nox
        - sshpass
        - hunspell
        - hunspell-en-us
        - tree
        - tcsh
        - man-db
        - pass
        - curl
        - wget
        - jq
        - traceroute
        - tcpdump
        - net-tools
        - iftop
        - bmon
        - htop
        - atop
    when:
      - ansible_facts['distribution'] == 'Ubuntu' or ansible_facts['distribution'] == 'Debian'

  - name: install packages for Ubuntu Bionic
    become: yes
    apt:
      state: latest
      name:
        - python
    when:
      - ansible_facts['distribution'] == 'Ubuntu'
      - ansible_facts['distribution_release'] == 'bionic'

  - name: install packages for Focal-Fossa
    become: yes
    apt:
      state: latest
      name:
        - python-is-python3
    when:
      - ansible_facts['distribution'] == 'Ubuntu'
      - ansible_facts['distribution_release'] == 'focal'

  - name: ensure python3 is python
    become: yes
    community.general.alternatives:
      name: python
      link: /usr/bin/python
      path: /usr/bin/python3

  - name: git pull env
    git:
      accept_hostkey: yes
      repo: 'git@github.com:egustafson/env'
      dest: "{{ ansible_env.HOME }}/env"

  - name: install env
    shell:
      chdir: "{{ ansible_env.HOME }}"
      cmd: "/usr/bin/python env/install.py"

  - name: set shell to tcsh
    become: yes
    user:
      name: "{{ ansible_user_id }}"
      shell: "/bin/tcsh"

  - name: install keybase
    vars:
      keybase_url: "https://prerelease.keybase.io/keybase_amd64.deb"
    become: yes
    apt:
      deb: "{{ keybase_url }}"
    tags: [ "keybase", "never" ]  # only run whith explicit tag 'keybase'

...
