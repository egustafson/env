# ########################################
#
#
## pre-hooks #############################
#
if (( $?WSL_DISTRO_NAME ) && (! $?WSLPATH )) then
    setenv WSLPATH "$PATH"
endif
#
if ( -e ~/.cshrc-local ) then
    set _cshrc_prehook=true
    source ~/.cshrc-local
    unset _cshrc_prehook
endif
#
## main cshrc ############################
#
set hostname = `hostname`
set prompt = "${hostname}> "
set shell = /bin/tcsh
set notify
set history = 1000
set filec
set nobeep
unset autologout
setenv NAME "Eric Gustafson"
alias ls "ls -F"
alias pwd 'echo $cwd'
alias . exit
alias more less
alias tb 'echo -n "\033]0;${HOST}\007"'
unalias vi

if (${OSTYPE} == 'cygwin') then
    #
    # Cygwin
    #
    # clean up paths with spaces early, in case cshrc needs the fix.
    setenv PATH `~/bin/cyg_fixpath.py`
    #
    alias netstat /cygdrive/c/Windows/System32/NETSTAT.EXE
    setenv DISPLAY localhost:0.0
    set cyghome = ~
    set winhome = "${USERPROFILE}\CygwinHome"
    setenv PATH "${cyghome}/bin:${PATH}"
    setenv PATH "${PATH}:${cyghome}/.local/bin"
    setenv PATH "${PATH}:${cyghome}/env/git-subrepo/lib"
else
    #
    # Unix / Darwin   (aka non-Cygwin)
    #
    set prompt = "`whoami`@`hostname -s`> "
    umask 022
    limit coredumpsize 0
    setenv GPG_TTY `tty`

    if (${shlvl} <= '1') then
        ##
        ## Test code -- prevent emacs *sub*-shell from having
        ##   path (w/ python virtual_env) stomped on.
        ##
        set path = ( \
            ~/bin \
            /usr/local/bin \
            /usr/bin \
            /bin \
            /usr/bin/X11 \
            /sbin \
            /usr/sbin \
            . \
            ~/.local/bin \
            ~/env/git-subrepo/lib )
    endif
endif

if ( $?WSL_DISTRO_NAME ) then
    set path = ( $path /usr/lib/wsl/lib )
endif

## Squash xterm-256color -> xterm  (for WSL on Windows)
if (${term} == 'xterm-256color') then
    set term = 'xterm'
endif

## Editor set-up (Emacs preferred)
##
setenv EDITOR "emacs"
alias emacs "emacs -nw"

if (${OSTYPE} == 'darwin') then
    #
    # Mac OS X  (Darwin)
    #
    set em = "/Applications/Emacs.app/Contents/MacOS/Emacs"
    if (-x "${em}") then
        alias emacs "${em} -nw"
    endif
endif

if ($?_emacsclient) then
    alias emacs   "client_emacs.sh"
    alias em      "client_em.sh"
    alias em-kill "client_emacs-kill.sh"
endif

## Setup SSH agent forwarding.
##  - don't run keychain if this isn't a login ($loginsh) shell.
##
set kc = `which keychain`  # Gentoo 'keychain'
if ($?loginsh && -x "${kc}") then
    if ($?SSH_AUTH_SOCK) then
        if !(-e $SSH_AUTH_SOCK) then
           ssh-agent -k >& /dev/null
        endif
    endif
    # timeout (720 min = 12h)
    ${kc} --timeout 720 -q `~/bin/find-ssh-keyfiles.pl`
    source ~/.keychain/${hostname}-csh
    if ($?SSH_AUTH_SOCK && -e $SSH_AUTH_SOCK) then
        touch `dirname $SSH_AUTH_SOCK`
    endif
endif

## Go language configuration
##
# put "locally installed go in the front"
#
if (-x /usr/local/go/bin/go) then;
    set path = ( /usr/local/go/bin $path )
endif
# set-up GOPATH
#
if (${OSTYPE} == 'cygwin') then
    setenv GOPATH "${winhome}\go"
    if (-d $GOPATH) then
        setenv PATH "${PATH}:${cyghome}/go/bin"
    endif
else
    setenv GOPATH ~/go
    if (-d $GOPATH) then
        set path = ( $path $GOPATH/bin )
    endif
endif

## Rust language configuration
##
if (-d ~/.cargo/bin) then;
    set path = ( $path ~/.cargo/bin )
endif

#
## .cshrc.d hooks #########################
#
foreach cshfile (~/.cshrc.d/*.csh)
    source $cshfile
end

#
## post-hooks #############################
#
if ( -e ~/.cshrc-local ) then
    set _cshrc_posthook=true
    source ~/.cshrc-local
    unset _cshrc_posthook
endif
if ( -e ~/.cshrc.local ) then
    source ~/.cshrc.local
endif
#
## Fix-up paths at the very end -- be defensive
#
if (${OSTYPE} == 'cygwin') then
    setenv PATH `~/bin/cyg_fixpath.py`
endif

## Local Variables:
## mode: shell-script
## End:
