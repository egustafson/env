##  ~/.bashrc  #######################################################
#

if [ -n "$WSL_DISTRO_NAME" ] && [ -z "$WSLPATH" ]; then
    export WSLPATH="$PATH"
fi

##  import library functions
#
source ~/.bashrc.d/lib.bashrc

##  pre-hooks  ###################################
#
if [ -e ~/.bashrc-local ]; then
    _bashrc_prehook=true
    . ~/.bashrc-local
    unset _bashrc_prehook
fi

#
## main bashrc #########################
#
#export HOSTNAME=`hostname`
export PS1="\h\$> "
set -o notify
bind "set bell-style none"  # nobeep
unset TMOUT          # disable auto-logout
export HISTSIZE=1000
export NAME="Eric Gustafson"

alias ls='ls -F'

if [ "$OSTYPE" == "linux" ]; then
    alias df="df -x aufs -x squashfs -x tmpfs -x devtmpfs -x overlay"
fi

if [ "$OSTYPE" == "cygwin" ]; then
    #
    # Cygwin
    #
    # clean up paths with spaces early, in case cshrc needs the fix.
    export PATH=$(~/bin/cyg_fixpath.py)
    #
    alias netstat="/cygdrive/c/Windows/System32/NETSTAT.EXE"
    export DISPLAY="localhost:0.0"
    cyghome=~
    winhome="${USERPROFILE}\CygwinHome"
    export PATH="${cyghome}/bin:${PATH}"
    export PATH="${PATH}:${cyghome}/.local/bin"
    export PATH="${PATH}:${cyghome}/env/git-subrepo/lib"
else
    #
    # Unix / Darwin   (aka non-Cygwin)
    #
    export PS1="\u@\h\$> "
    umask 022
    ulimit -c 0  # limit coredump size
    export GPG_TTY=$(tty)

    if [ "$SHLVL" -le 1 ]; then
        # echo "setting path"
        setpath \
            ~/bin \
            /usr/local/bin \
            /usr/bin \
            /bin \
            /usr/bin/X11 \
            /sbin \
            /usr/sbin \
            . \
            ~/.local/bin \
            ~/env/git-subrepo/lib
    fi
fi

if [ "$OSTYPE" == "FreeBSD" ]; then
    unalias df
    export PATH="$PATH:/usr/local/sbin"
fi

if [ -v "$WSL_DISTRO_NAME" ]; then
    export PATH="$PATH:/usr/lib/wsl/lib"
fi

## Squash xterm-256color -> xterm  (for WSL on Windows)
if [ "$TERM" == "xterm-256color" ]; then
    export TERM="xterm"
fi

## Editor set-up (Emacs preferred)
export EDITOR="emacs"
alias emacs="emacs -nw"

if [ "$OSTYPE" == "darwin" ]; then
    #
    # Mac OS X  (Darwin)
    em="/Applications/Emacs.app/Contents/MacOS/Emacs"
    if [ -x "$em" ]; then
        alias emacs="$em -nw"
    fi
fi

## direct Keybase to NOT start the GUI
export KEYBASE_NO_GUI=1

## Setup SSH agent forwarding.
#
#    but, don't run this if we're not a login shell
##
kc=$(command -v keychain)   # Gentoo 'keychain'
if [ "$SHLVL" -le "1" ] && [ -x "$kc"  ]; then
    if [ ! -S "$SSH_AUTH_SOCK" ]; then
        ssh-agent -k > /dev/null 2>&1
    fi
    # timeout (720 min = 12h)
    "$kc" --timeout 720 -q $(~/bin/find-ssh-keyfiles.pl)
    source ~/.keychain/${HOSTNAME}-sh
    if [ -S "$SSH_AUTH_SOCK" ]; then
        touch $(dirname $SSH_AUTH_SOCK)
    fi
fi

## Go language configuratoin
#
local_go="/usr/local/go/bin/go"
if [ -x "$local_go" ]; then
    export PATH="${local_go%/*}:$PATH"  # put local go at the front
fi
export GOPATH=~/go
if [ -d "$GOPATH" ]; then
    export PATH="$PATH:$GOPATH/bin"
fi

## Rust language configuration
#
if [ -d ~/.cargo/bin ]; then
    export PATH="$PATH:$HOME/.cargo/bin"
fi

##  .bashrc.d hooks  #############################
#
for BASHFILE in ~/.bashrc.d/[0-9]*.bashrc; do
    # echo "sourcing: $BASHFILE"
    . "$BASHFILE"
done

##  post-hooks  ##################################
#
if [ -e ~/.bashrc-local ]; then
    _bashrc_posthook=true
    . ~/.bashrc-local
    unset _bashrc_posthook
fi
if [ -e !/.bashrc.local ]; then
    . ~/.bashrc.local
fi

##  Cygwin: fix-up paths  (last thing, be defensive)
#
if [ "$OSTYPE" == "cygwin" ]; then
    export PATH=$(~/bin/cyg_fixpath.py)
fi

## Local Variables:
## mode: shell-script
## sh-shell: bash
## End:
